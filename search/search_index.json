{"config":{"lang":["de"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Hallo und Willkommen!","text":"<p>Ich lebe ziemlich lang in Deutschland, hatte einige \u201eDeutsch als Fremdsprache\u201c-Kurse besucht. Es gibt jedoch viele Nuancen, die man nicht in einem Sprachkurs lernt. Hier schreibe ich \u00fcber die eine oder andere Sprache-Konstrukte, die ich pers\u00f6nlich f\u00fcr interessant halte.</p>"},{"location":"blog/2025/08/15/cleanup-git-commit/","title":"Cleanup git commit","text":"<p>If you involved in more than one projects for more than one organisations, you know it. At least for me: sooner or later, I will commit a project A with my e-mail in organisation B, vice versa.  </p> <p>To overwrite all author names and author emails in all commit history: run</p> <pre><code>#!/usr/bin/env bash\n\ngit filter-branch --commit-filter '\n      if [ true ];\n      then\n              GIT_AUTHOR_NAME=\"truble maker\";\n              GIT_AUTHOR_EMAIL=\"original-trublemaker@users.noreply.github.com\";\n              git commit-tree \"$@\";\n      else\n              git commit-tree \"$@\";\n      fi' HEAD\n</code></pre> <p>One can also replace <code>true</code> with a predicate to just replace matched commits.</p> <p>For example:</p> <pre><code>#!/usr/bin/env bash\n\ngit filter-branch --commit-filter '\n      if [ \"$GIT_AUTHOR_EMAIL\" = \"wrong_email@wrong_host.local\" ];\n      then\n              GIT_AUTHOR_NAME=\"truble maker\";\n              GIT_AUTHOR_EMAIL=\"original-trublemaker@users.noreply.github.com\";\n              git commit-tree \"$@\";\n      else\n              git commit-tree \"$@\";\n      fi' HEAD\n</code></pre> <p>Credit: https://stackoverflow.com/questions/2919878/git-rewrite-previous-commit-usernames-and-emails</p>"},{"location":"blog/2025/08/19/empfindliche-daten-aus-git-repository-entfernen/","title":"Empfindliche Daten aus Git-Repository entfernen","text":"<p>Github hat eine Anleitung daf\u00fcr <sup>1</sup>. Hier sind meine einige Beispiele:</p>"},{"location":"blog/2025/08/19/empfindliche-daten-aus-git-repository-entfernen/#loschung-einer-datei-in-der-gesamte-history","title":"L\u00f6schung einer Datei in der gesamte History","text":"<pre><code>git-filter-repo --invert-paths --path PATH-TO-YOUR-FILE-WITH-SENSITIVE-DATA\n</code></pre> <p>Beispiel:</p> <p>Zum L\u00f6schen die Datei <code>.secre.salite</code> man kann diesen Befehl ausf\u00fchren.</p> <pre><code>git-filter-repo --invert-paths --path .secret.sqlite\n</code></pre> <p>Das Option <code>--sensitive-data-removal</code> funktioniert nicht bei mir, ich habe sie nicht genutzt.</p>"},{"location":"blog/2025/08/19/empfindliche-daten-aus-git-repository-entfernen/#loschung-eines-string-in-plaintext-dateien","title":"L\u00f6schung eines String in Plaintext-Dateien","text":"<pre><code>git-filter-repo --replace-text ../confindental.txt\n</code></pre> <p>Die Datei <code>confindental.txt</code> muss au\u00dferhalb von Repository sein. Ein Beispiel vom Inhalt der Datei <code>confident</code>:</p> <pre><code>+00 123456789\n+00123-456-789\n+00 123-456-789\nemail@work.com\n</code></pre>"},{"location":"blog/2025/08/19/empfindliche-daten-aus-git-repository-entfernen/#funote","title":"Fu\u00dfnote:","text":"<ol> <li> <p>GH:Removing sensitive data from a repository \u21a9</p> </li> </ol>"},{"location":"blog/2025/08/15/hello-world/","title":"Hello World","text":"<p>Hello World ist traditionell das erste Programm bei einer Programmiersprache.</p>"},{"location":"blog/archive/2025/","title":"2025","text":""},{"location":"blog/category/git/","title":"Git","text":""},{"location":"blog/category/dummy/","title":"Dummy","text":""},{"location":"blog/category/programming/","title":"Programming","text":""}]}